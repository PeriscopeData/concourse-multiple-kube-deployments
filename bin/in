#!/bin/bash
set -e
set -o pipefail
exec 3>&1 # use fd 3 for script output
exec 1>&2 # send normal stdout to stderr for logging

echo "Starting in"
payload="$(mktemp "$TMPDIR/k8s-resource-request.XXXXXX")"
cat > "$payload" <&0
cd "$1"

mkdir -p /root/.kube

KUBE_URL=$(jq -r .source.cluster_url < "$payload")
NAMESPACE=$(jq -r .source.namespace < "$payload")

KUBECTL="/usr/local/bin/kubectl --server=$KUBE_URL --namespace=$NAMESPACE"

# configure SSL Certs if available
if [[ "$KUBE_URL" =~ https.* ]]; then
    KUBE_CA=$(jq -r .source.cluster_ca < "$payload")
    KUBE_KEY=$(jq -r .source.admin_key < "$payload")
    KUBE_CERT=$(jq -r .source.admin_cert < "$payload")
    CA_PATH="/root/.kube/ca.pem"
    KEY_PATH="/root/.kube/key.pem"
    CERT_PATH="/root/.kube/cert.pem"

    echo "$KUBE_CA" | base64 -d > $CA_PATH
    echo "$KUBE_KEY" | base64 -d > $KEY_PATH
    echo "$KUBE_CERT" | base64 -d > $CERT_PATH

    KUBECTL="$KUBECTL --certificate-authority=$CA_PATH --client-key=$KEY_PATH --client-certificate=$CERT_PATH"
fi

export KUBECTL

DEPLOYMENT_LIST=$(jq -r .source.deployment_list< "$payload")
SANITIZED_DEPLOYMENT_LIST=`echo $DEPLOYMENT_LIST | sed -e 's,\,,,g' | sed -e 's,\[,,g' | sed -e 's,\],,g' | sed -e 's,\",,g'`
DEPLOYMENT_ARRAY=($SANITIZED_DEPLOYMENT_LIST)
echo "The list of deployments passed to this script:"
echo ${DEPLOYMENT_ARRAY[@]}

result=`jq -n '{}'`
for deployment_name in "${DEPLOYMENT_ARRAY[@]}"; do
    RESOURCE="deployment/$deployment_name"
    IMG=$($KUBECTL get -o json "$RESOURCE" | jq -r '.spec.template.spec.containers[0].image')
    KEY=$deployment_name
    VAL=$IMG
    result=`echo $result | jq --arg a $KEY --arg b $VAL '.version[$a] = $b'`
    COUNTER=$[$COUNTER + 1]
done

echo "In complete"
echo "$result" | jq -s add  >&3
